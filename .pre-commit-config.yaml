---
# Pre-commit hooks for quantiq
# Optimized for scientific Python with JAX, NumPy, and documentation
#
# To install: pre-commit install
# To run manually: pre-commit run --all-files
# To update hooks: pre-commit autoupdate
#
# Last updated: 2025-10-20
# Tool versions match installed packages in venv

default_language_version:
  python: python3.13  # Match CI/CD and ruff target-version (py313)

repos:
  # =============================================================================
  # General file and format checks
  # =============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0  # Updated from v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(docs/.*\.rst|.*\.md)$  # Preserve intentional trailing spaces
      - id: end-of-file-fixer
        exclude: ^docs/_build/
      - id: check-yaml
        args: [--unsafe]  # Allow custom tags in GitHub Actions
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-ast  # Validate Python syntax
      - id: debug-statements  # Prevent committed debugger statements
      - id: mixed-line-ending
        args: ['--fix=lf']  # Enforce Unix line endings
      - id: check-docstring-first
      - id: fix-byte-order-marker
      - id: name-tests-test
        args: ['--pytest-test-first']

  # =============================================================================
  # YAML linting (for CI/CD workflows)
  # =============================================================================
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.0
    hooks:
      - id: yamllint
        args: [--format, parsable, --strict]
        files: \.(yaml|yml)$

  # =============================================================================
  # Python code formatting and linting - RUFF (modern all-in-one)
  # =============================================================================
  # Ruff replaces black+isort+flake8+pyupgrade (10-100x faster)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.14.1  # Matches installed version
    hooks:
      # Ruff linter (replaces flake8, pydocstyle, some pyupgrade checks)
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      # Ruff formatter (replaces black, isort)
      - id: ruff-format

  # =============================================================================
  # LEGACY TOOLS (replaced by ruff, kept commented for reference)
  # =============================================================================
  # - repo: https://github.com/psf/black
  #   rev: 25.9.0  # Updated from 23.12.1 - matches installed version
  #   hooks:
  #     - id: black
  #       args: ['--line-length=100']
  #       # Config also in pyproject.toml
  #
  # - repo: https://github.com/pycqa/isort
  #   rev: 7.0.0  # Updated from 5.13.2 (major upgrade)
  #   hooks:
  #     - id: isort
  #       args: ['--profile=black', '--line-length=100']
  #       # Config also in pyproject.toml
  #
  # - repo: https://github.com/pycqa/flake8
  #   rev: 7.3.0  # Updated from 7.0.0
  #   hooks:
  #     - id: flake8
  #       args:
  #         - '--max-line-length=100'
  #         - '--extend-ignore=E203,E501,W503'
  #         - '--max-complexity=10'
  #       additional_dependencies:
  #         - flake8-docstrings>=1.7.0
  #         - flake8-bugbear>=24.0.0
  #         - flake8-comprehensions>=3.15.0
  #         - flake8-simplify>=0.21.0
  #       # Config also in .flake8 and pyproject.toml
  #
  # - repo: https://github.com/asottile/pyupgrade
  #   rev: v3.21.0  # Updated from v3.15.0 - matches installed version
  #   hooks:
  #     - id: pyupgrade
  #       args: [--py313-plus]  # Python 3.13+ (compatible with 3.14)

  # =============================================================================
  # Python type checking (OPTIONAL - currently disabled)
  # =============================================================================
  # Mypy is disabled for initial ruff migration (165 type errors too strict)
  # Re-enable gradually after addressing ruff issues
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.18.2  # Updated from v1.8.0 - matches installed version
  #   hooks:
  #     - id: mypy
  #       args:
  #         - --ignore-missing-imports
  #         - --strict
  #         - --show-error-codes
  #       additional_dependencies:
  #         - numpy>=1.24
  #         - jax>=0.4.0
  #       exclude: ^(tests/|docs/|setup.py)
  #       # Strict config in pyproject.toml
  #       # Note: types-all removed due to Python 3.14 incompatibility

  # =============================================================================
  # Python docstring checking (replaced by ruff)
  # =============================================================================
  # Pydocstyle is replaced by ruff's docstring checking (D rules)
  # - repo: https://github.com/pycqa/pydocstyle
  #   rev: 6.3.0  # Current version
  #   hooks:
  #     - id: pydocstyle
  #       args: ['--convention=numpy']  # Scientific Python standard
  #       exclude: ^(tests/|setup.py|docs/conf.py)

  # =============================================================================
  # Security checks
  # =============================================================================
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: ^tests/

  # =============================================================================
  # Spell checking (for documentation and comments)
  # =============================================================================
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.0
    hooks:
      - id: codespell
        args:
          - --ignore-words-list=crate,nd,sav,ba,fo,te,hist,als,acn
          - --skip="*.lock,*.css,*.js,*.map,*.json,.git,_build,venv"
        exclude: ^(docs/_build/|\.git/)

  # =============================================================================
  # Dependency version consistency (uv lock file validation)
  # =============================================================================
  - repo: local
    hooks:
      - id: uv-lock-check
        name: Verify uv.lock is up to date
        entry: bash -c 'if [ -f uv.lock ]; then uv lock --check; fi'
        language: system
        pass_filenames: false
        files: ^(pyproject\.toml|uv\.lock)$


# =============================================================================
# Configuration notes:
# =============================================================================
# 1. MIGRATED TO RUFF: black+isort+flake8+pyupgrade â†’ ruff (10-100x)
# 2. All tool versions updated to match installed versions in venv
# 3. Configurations synchronized with pyproject.toml (ruff config)
# 4. Optimized for scientific Python (NumPy, JAX patterns)
# 5. Security checks added (bandit)
# 6. Spell checking with scientific acronyms included
# 7. YAML linting added for CI/CD workflows
# 8. Mypy temporarily disabled (165 errors - gradual re-enable)
# 9. Pydocstyle replaced by ruff's docstring checking
#
# Ruff configuration in pyproject.toml includes:
# - Python 3.13+ target (compatible with 3.14)
# - Line length 100 (matching black)
# - Auto-fixing enabled
# - Scientific Python optimizations (math names, JAX patterns)
# - Per-file ignores for __init__.py and tests
#
# Legacy tools kept commented for reference
