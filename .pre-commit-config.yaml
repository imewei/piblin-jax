# Pre-commit hooks for quantiq
# Optimized for scientific Python codebase with JAX, NumPy, and extensive documentation
#
# To install: pre-commit install
# To run manually: pre-commit run --all-files
# To update hooks: pre-commit autoupdate
#
# Last updated: 2025-10-20
# Tool versions match installed packages in venv

default_language_version:
  python: python3  # Uses system default Python (3.14.0)

repos:
  # =============================================================================
  # General file and format checks
  # =============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0  # Updated from v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: ^(docs/.*\.rst|.*\.md)$  # Preserve intentional trailing spaces
      - id: end-of-file-fixer
        exclude: ^docs/_build/
      - id: check-yaml
        args: [--unsafe]  # Allow custom tags in GitHub Actions
      - id: check-toml
      - id: check-json
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-ast  # Validate Python syntax
      - id: debug-statements  # Prevent committed debugger statements
      - id: mixed-line-ending
        args: ['--fix=lf']  # Enforce Unix line endings
      - id: check-docstring-first
      - id: fix-byte-order-marker
      - id: name-tests-test
        args: ['--pytest-test-first']

  # =============================================================================
  # YAML linting (for CI/CD workflows)
  # =============================================================================
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.0
    hooks:
      - id: yamllint
        args: [--format, parsable, --strict]
        files: \.(yaml|yml)$

  # =============================================================================
  # Python code formatting
  # =============================================================================
  - repo: https://github.com/psf/black
    rev: 25.9.0  # Updated from 23.12.1 - matches installed version
    hooks:
      - id: black
        args: ['--line-length=100']
        # Config also in pyproject.toml

  - repo: https://github.com/pycqa/isort
    rev: 7.0.0  # Updated from 5.13.2 - matches installed version (major upgrade)
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=100']
        # Config also in pyproject.toml

  # =============================================================================
  # Python code linting
  # =============================================================================
  - repo: https://github.com/pycqa/flake8
    rev: 7.3.0  # Updated from 7.0.0
    hooks:
      - id: flake8
        args:
          - '--max-line-length=100'
          - '--extend-ignore=E203,E501,W503'
          - '--max-complexity=10'
        additional_dependencies:
          - flake8-docstrings>=1.7.0
          - flake8-bugbear>=24.0.0
          - flake8-comprehensions>=3.15.0
          - flake8-simplify>=0.21.0
        # Config also in .flake8 and pyproject.toml

  # =============================================================================
  # Python code upgrading (modernization)
  # =============================================================================
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.21.0  # Updated from v3.15.0 - matches installed version
    hooks:
      - id: pyupgrade
        args: [--py313-plus]  # Target Python 3.13+ syntax (compatible with 3.14)

  # =============================================================================
  # Python type checking
  # =============================================================================
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.18.2  # Updated from v1.8.0 - matches installed version
    hooks:
      - id: mypy
        args:
          - --ignore-missing-imports
          - --strict
          - --show-error-codes
        additional_dependencies:
          - numpy>=1.24
          - jax>=0.4.0
        exclude: ^(tests/|docs/|setup.py)
        # Strict config in pyproject.toml
        # Note: types-all removed due to Python 3.14 incompatibility

  # =============================================================================
  # Python docstring checking
  # =============================================================================
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0  # Current version
    hooks:
      - id: pydocstyle
        args: ['--convention=numpy']  # Scientific Python standard
        exclude: ^(tests/|setup.py|docs/conf.py)

  # =============================================================================
  # Security checks
  # =============================================================================
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: ['-c', 'pyproject.toml']
        additional_dependencies: ['bandit[toml]']
        exclude: ^tests/

  # =============================================================================
  # Spell checking (for documentation and comments)
  # =============================================================================
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.0
    hooks:
      - id: codespell
        args:
          - --ignore-words-list=crate,nd,sav,ba,fo,te,hist
          - --skip="*.lock,*.css,*.js,*.map,*.json,.git,_build,venv"
        exclude: ^(docs/_build/|\.git/)

  # =============================================================================
  # OPTIONAL: Ruff (modern all-in-one linter)
  # =============================================================================
  # Uncomment to use ruff instead of black+isort+flake8+pyupgrade
  # Ruff is 10-100x faster and combines functionality of multiple tools
  # Requires adding [tool.ruff] configuration to pyproject.toml
  #
  # - repo: https://github.com/astral-sh/ruff-pre-commit
  #   rev: v0.14.1  # Matches installed version
  #   hooks:
  #     # Ruff linter (replaces flake8, pydocstyle, some pyupgrade checks)
  #     - id: ruff
  #       args: [--fix, --exit-non-zero-on-fix]
  #     # Ruff formatter (replaces black, isort)
  #     - id: ruff-format

# =============================================================================
# Configuration notes:
# =============================================================================
# 1. All tool versions updated to match installed versions in venv
# 2. Configurations synchronized with pyproject.toml and .flake8
# 3. Optimized for scientific Python with NumPy docstring convention
# 4. Security checks added (bandit)
# 5. Spell checking added for extensive documentation
# 6. YAML linting added for CI/CD workflows
# 7. Enhanced flake8 with additional plugins for better code quality
# 8. Mypy configured for strict type checking matching pyproject.toml
# 9. Ruff available as optional modern alternative (commented out)
#
# To migrate to ruff in the future:
# 1. Add [tool.ruff] configuration to pyproject.toml
# 2. Uncomment ruff section above
# 3. Comment out black, isort, flake8, and pyupgrade sections
# 4. Run: pre-commit run --all-files
# 5. Review and fix any new issues
# 6. Update pyproject.toml dev dependencies
